---
name: Test Arch Linux

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

env:
  TWITCH_PUBSUB_SERVER_TAG: v1.0.11
  HTTPBOX_TAG: v0.2.1
  QT_QPA_PLATFORM: minimal

concurrency:
  group: test-arch-linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-arch:
    # needs: ["test-arch"]
    name: "Build Arch Linux"
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    strategy:
      fail-fast: false

    steps:
      - name: Install dependencies
        run: |
          sudo pacman -Sy
          sudo pacman -S --noconfirm 'qt6-base' 'qt6-tools' 'boost-libs' 'openssl' 'qt6-imageformats' 'qtkeychain-qt6' 'qt6-5compat' 'qt6-svg' 'libnotify'
          sudo pacman -S --noconfirm 'git' 'boost' 'cmake' 'benchmark'

      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: Chatterino/chatterino2
          submodules: recursive
          path: chatterino

      - name: Create build directory
        run: mkdir build
        working-directory: chatterino

      - name: Configure
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_APP=On \
            -DBUILD_TESTS=Off \
            -DBUILD_BENCHMARKS=Off \
            -DCHATTERINO_UPDATER=Off \
            -DUSE_SYSTEM_QTKEYCHAIN=On \
            -DSKIP_JSON_GENERATION=On \
            ..
        working-directory: chatterino/build

      - name: Build
        run: |
          cmake --build . -j $(nproc)
        working-directory: chatterino/build

      - name: Package
        run: |
          tar czf chatterino-x86_64-arch-linux.tar.gz \
            -C bin chatterino \
            -C ../../resources com.chatterino.chatterino.desktop \
            icon.png
        working-directory: chatterino/build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: chatterino-x86_64-arch-linux.tar.gz
          path: chatterino/build/chatterino-x86_64-arch-linux.tar.gz

  release:
    needs: ["build-arch"]
    name: "Release"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Prepare
        run: |
          echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
          echo "NOW_TAG=$(date +'%Y%m%dT%H%M%S')" >> $GITHUB_ENV

          mkdir prev-release
          mkdir release-artifacts

      - uses: actions/download-artifact@v4
        name: Arch Linux
        with:
          name: chatterino-x86_64-arch-linux.tar.gz
          path: release-artifacts/

      - name: sha256sum release artifacts
        run: |
          sha256sum * > sha256-checksums.txt
        working-directory: release-artifacts

      - id: prevrelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: Chatterino
          repo: pkg
          excludes: prerelease, draft
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Chatterino/pkg'
          version: ${{ steps.prevrelease.outputs.id }}
          file: "chatterino-x86_64-arch-linux.tar.gz"
          target: 'prev-release/chatterino-x86_64-arch-linux.tar.gz'

      - name: Compare
        id: compare
        run: |
          if ! 1>/dev/null diff -q release-artifacts/chatterino-x86_64-arch-linux.tar.gz prev-release/chatterino-x86_64-arch-linux.tar.gz; then
            echo "Arch Linux file differs"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        if: steps.compare.outputs.has_changes == 'true'
        uses: ncipollo/release-action@v1.16.0
        with:
          replacesArtifacts: true
          allowUpdates: false
          artifactErrorsFailBuild: true
          artifacts: "release-artifacts/*"
          body: "body"
          prerelease: false
          name: "Release ${{ env.NOW }}"
          tag: "${{ env.NOW_TAG }}"
