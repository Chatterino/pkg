pkgname=chatterino-nightly
pkgver=1
pkgrel=1
pkgdesc='Chatterino Nightly'
arch=('x86_64')
url=https://chatterino.com
license=('MIT')
depends=('qt6-base' 'qt6-tools' 'boost-libs' 'openssl' 'qt6-imageformats' 'qtkeychain-qt6' 'qt6-5compat' 'qt6-svg' 'libnotify')
makedepends=('git' 'boost' 'cmake' 'ninja')
source=("git+https://github.com/Chatterino/chatterino2"
        "git+https://github.com/arsenm/sanitizers-cmake"
        "git+https://github.com/Chatterino/libcommuni#branch=chatterino-cmake"
        "git+https://github.com/pajlada/settings"
        "git+https://github.com/pajlada/signals"
        "git+https://github.com/pajlada/serialize"
        "git+https://github.com/Tencent/rapidjson"
        "git+https://github.com/Chatterino/websocketpp"
        "git+https://github.com/Neargye/magic_enum"
        "git+https://github.com/mackron/miniaudio"
        "git+https://github.com/lua/lua"
        "git+https://github.com/ThePhD/sol2"
        "git+https://github.com/martinmoene/expected-lite"
        "git+https://github.com/Chatterino/crash-handler")
md5sums=('SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP')

prepare () {
    echo "testman: $TESTMAN"
    # Disable updating of unused submodules
    git -C "${srcdir}/chatterino2" config submodule.lib/googletest.update "none"
    git -C "${srcdir}/chatterino2" config submodule.lib/WinToast.update "none"
    git -C "${srcdir}/chatterino2" config submodule.lib/qtkeychain.update "none"
    git -C "${srcdir}/chatterino2" submodule init
    git -C "${srcdir}/chatterino2" config submodule.cmake/sanitizers-cmake.url "$srcdir/sanitizers-cmake"
    git -C "${srcdir}/chatterino2" config submodule.lib/libcommuni.url "$srcdir/libcommuni"
    git -C "${srcdir}/chatterino2" config submodule.lib/settings.url "$srcdir/settings"
    git -C "${srcdir}/chatterino2" config submodule.lib/signals.url "$srcdir/signals"
    git -C "${srcdir}/chatterino2" config submodule.lib/serialize.url "$srcdir/serialize"
    git -C "${srcdir}/chatterino2" config submodule.lib/rapidjson.url "$srcdir/rapidjson"
    git -C "${srcdir}/chatterino2" config submodule.lib/websocketpp.url "$srcdir/websocketpp"
    git -C "${srcdir}/chatterino2" config submodule.lib/miniaudio.url "$srcdir/miniaudio"
    git -C "${srcdir}/chatterino2" config submodule.lib/magicenum.url "$srcdir/magicenum"
    git -C "${srcdir}/chatterino2" config submodule.lib/sol2.url "$srcdir/sol2"
    git -C "${srcdir}/chatterino2" config submodule.lib/lua/src.url "$srcdir/lua"
    git -C "${srcdir}/chatterino2" config submodule.lib/expected-lite.url "$srcdir/expected-lite"
    git -C "${srcdir}/chatterino2" config submodule.tools/crash-handler.url "$srcdir/crash-handler"
    git -C "${srcdir}/chatterino2" -c protocol.file.allow=always submodule update
}

build() {
    mkdir -p "${srcdir}/build"
    cmake \
        -GNinja \
        -DCMAKE_BUILD_TYPE=Release \
        -DUSE_SYSTEM_QTKEYCHAIN=On \
        -DUSE_PRECOMPILED_HEADERS=On \
        -DCHATTERINO_UPDATER=Off \
        -DSKIP_JSON_GENERATION=On \
        -B "${srcdir}/build" \
        "${srcdir}/chatterino2"
    cmake --build "${srcdir}/build"
}

package() {
    install -Dm755 "build/bin/chatterino" "${pkgdir}/usr/bin/chatterino"
    install -Dm644 "chatterino2/resources/com.chatterino.chatterino.desktop" "${pkgdir}/usr/share/applications/com.chatterino.chatterino.desktop"
    install -Dm644 "chatterino2/resources/icon.png" "${pkgdir}/usr/share/pixmaps/com.chatterino.chatterino.png"
}
